name: Deploy to Cloud Run from Image

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: gdsc-widyatama-cloud # TODO: update Google Cloud project id
  SERVICE: simple-app-github # TODO: update Cloud Run service name
  REGION: asia-southeast2 # TODO: update Cloud Run service region
  IMAGE_NAME: simpleapp

jobs:

  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
        
      - name: Checkout
        uses: actions/checkout@v2

    #   - name: Google Auth
    #     id: auth
    #     uses: 'google-github-actions/auth@v0'
    #     with:
    #       workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
    #       service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}' # Replace with the name of your GitHub Actions secret

    # Build the Docker image using Cloud Build
      - name: Build Docker Image
        run: |
          gcloud builds submit --tag "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest" .

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: 'gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest'

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}